<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="..\..\BaseTemplate.tt"#>
<#@ output extension="\\" #>
<#
CustomHost host = (CustomHost)Host;

OdcmModel model = host.Model;

var entities = model.GetEntityTypes();

foreach(var entity in entities)
{	
	var entityName = GetPrefix() + entity.Name + "Operations";
#><#=GetCommentHeader()#>

#import "<#=entityName#>.h"

<#=GetImplementationDoc(entityName)#>
@implementation <#=entityName#>

-(id)initWithUrl:(NSString *)urlComponent parent:(id<MSODataExecutable>)parent{
    return [super initOperationWithUrl:urlComponent parent:parent];
}<#
		if(entity.HasActions()){
			foreach(var action in entity.Actions()){
				if(!action.IsBoundToCollection){
				var clazz = action.ReturnType.IsComplex() ? "[" + action.ReturnType.GetTypeString() + " class]" : "nil";

if (action.IsFunction()){
#>

-(<#=GetTaskType()#>*)<#= action.Name.ToLowerFirstChar() #> <#=GetParamsString(action.Parameters)#>(void (^)(<#=GetParamString(action.ReturnType)#>, MSODataException *error))callback{

	id<MSODataRequest> request = [[self getResolver] createODataRequest];
	<#=GetFunctionParameters(action.Parameters)#>
	
	NSString* parameters = [MSODataBaseContainerHelper getFunctionParameters: params];
	[[request getUrl] appendPathComponent:[[NSString alloc] initWithFormat:@"<#= action.Name#>(%@)",parameters]];
	[request setVerb:POST];

	<#=GetTaskType()#>* task = [super oDataExecuteWithRequest:request callback:^(id<MSODataResponse> r, MSODataException *error) {
       if(error == nil){
			<#=GetType(action.ReturnType)#> result = (<#=GetType(action.ReturnType)#>)[[[self getResolver]getJsonSerializer] deserialize:[r getPayload] : <#=clazz#>];
            callback(result, error);
        }
        else{
            callback(<#=action.ReturnType.IsComplex() ? "nil" : "[r getStatus]"#>, error);
        }
    }];
    
    return task;
}
<#}else if(action != null){#>


-(<#=GetTaskType()#>*)<#= action.Name.ToLowerFirstChar() #> <#=GetParamsString(action.Parameters)#>(void (^)(<#=GetParamString(action.ReturnType)#>, MSODataException *error))callback{
	<#=GetParametersToJson(action.Parameters)#>

	<#=GetTaskType()#>* task = [self <#= action.Name.ToLowerFirstChar() #>Raw <#=GetParametersForRawCall(action.Parameters.Select(p => p.Name))#> :^(NSString *returnValue, MSODataException *error){
       if(error == nil){
			<#=GetType(action.ReturnType)#> result = (<#=GetType(action.ReturnType)#>)[[[self getResolver]getJsonSerializer] deserialize:[returnValue dataUsingEncoding:NSUTF8StringEncoding] : <#=clazz#>];
            callback(result, error);
        }
        else{
            callback(<#=action.ReturnType.IsComplex() ? "nil" : "(int)[returnValue integerValue]"#>, error);
        }
    }];
    
    return task;
}

-(<#=GetTaskType()#>*)<#= action.Name.ToLowerFirstChar() #>Raw <#=GetParamsForRaw(action.Parameters.Select(p => p.Name))#>(void (^)(<#=GetParamRaw(action.ReturnType.Name)#>, MSODataException *error))callback{

	id<MSODataRequest> request = [[self getResolver] createODataRequest];
	<#=GetParametersToJsonRaw(action.Parameters.Select(p => p.Name))#>
	[[request getUrl] appendPathComponent:@"<#= action.Name#>"];
	[request setVerb:POST];

	<#=GetTaskType()#>* task = [super oDataExecuteWithRequest:request callback:^(id<MSODataResponse> r, MSODataException *error) {
        if(error == nil){
            callback([[NSString alloc] initWithData:[r getPayload] encoding:NSUTF8StringEncoding], error);
        }
        else{
            callback([[NSString alloc] initWithFormat:@"%d",[r getStatus]], error);
        }
    }];
    
    return task;
}				
<#}
				}
			}
		}
#>@end
<#=CreateEndOfFile(entityName)#><#
}
#>